// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"time"

	"github.com/mikestefanello/pagoda/ent/filestorage"
	"github.com/mikestefanello/pagoda/ent/passwordtoken"
	"github.com/mikestefanello/pagoda/ent/schema"
	"github.com/mikestefanello/pagoda/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	filestorageMixin := schema.FileStorage{}.Mixin()
	filestorageMixinFields0 := filestorageMixin[0].Fields()
	_ = filestorageMixinFields0
	filestorageFields := schema.FileStorage{}.Fields()
	_ = filestorageFields
	// filestorageDescCreatedAt is the schema descriptor for created_at field.
	filestorageDescCreatedAt := filestorageMixinFields0[0].Descriptor()
	// filestorage.DefaultCreatedAt holds the default value on creation for the created_at field.
	filestorage.DefaultCreatedAt = filestorageDescCreatedAt.Default.(func() time.Time)
	// filestorageDescUpdatedAt is the schema descriptor for updated_at field.
	filestorageDescUpdatedAt := filestorageMixinFields0[1].Descriptor()
	// filestorage.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	filestorage.DefaultUpdatedAt = filestorageDescUpdatedAt.Default.(func() time.Time)
	// filestorage.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	filestorage.UpdateDefaultUpdatedAt = filestorageDescUpdatedAt.UpdateDefault.(func() time.Time)
	// filestorageDescBucketName is the schema descriptor for bucket_name field.
	filestorageDescBucketName := filestorageFields[0].Descriptor()
	// filestorage.BucketNameValidator is a validator for the "bucket_name" field. It is called by the builders before save.
	filestorage.BucketNameValidator = filestorageDescBucketName.Validators[0].(func(string) error)
	// filestorageDescObjectKey is the schema descriptor for object_key field.
	filestorageDescObjectKey := filestorageFields[1].Descriptor()
	// filestorage.ObjectKeyValidator is a validator for the "object_key" field. It is called by the builders before save.
	filestorage.ObjectKeyValidator = filestorageDescObjectKey.Validators[0].(func(string) error)
	passwordtokenFields := schema.PasswordToken{}.Fields()
	_ = passwordtokenFields
	// passwordtokenDescHash is the schema descriptor for hash field.
	passwordtokenDescHash := passwordtokenFields[0].Descriptor()
	// passwordtoken.HashValidator is a validator for the "hash" field. It is called by the builders before save.
	passwordtoken.HashValidator = passwordtokenDescHash.Validators[0].(func(string) error)
	// passwordtokenDescCreatedAt is the schema descriptor for created_at field.
	passwordtokenDescCreatedAt := passwordtokenFields[1].Descriptor()
	// passwordtoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	passwordtoken.DefaultCreatedAt = passwordtokenDescCreatedAt.Default.(func() time.Time)
	userHooks := schema.User{}.Hooks()
	user.Hooks[0] = userHooks[0]
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescVerified is the schema descriptor for verified field.
	userDescVerified := userFields[3].Descriptor()
	// user.DefaultVerified holds the default value on creation for the verified field.
	user.DefaultVerified = userDescVerified.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
}

const (
	Version = "v0.12.5"                                         // Version of ent codegen.
	Sum     = "h1:KREM5E4CSoej4zeGa88Ou/gfturAnpUv0mzAjch1sj4=" // Sum of ent codegen.
)
