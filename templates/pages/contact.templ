package pages

import (
    "github.com/mikestefanello/pagoda/pkg/controller"
    "github.com/mikestefanello/pagoda/pkg/types"
    "github.com/mikestefanello/pagoda/templates/components"
)

templ Contact(page *controller.Page) {
    if page.HTMX.Request.Target != "contact" {
        <article class="message is-link">
            <div class="message-body">
                <p>This is an example of a form with inline, server-side validation and HTMX-powered AJAX submissions without writing a single line of JavaScript.</p>
                <p>Only the form below will update async upon submission.</p>
            </div>
        </article>
    }

    @contactForm(page)
}

templ contactForm(page *controller.Page) {
    if form, ok := page.Form.(*types.ContactForm); ok {
        if form.Submission.IsDone() {
            <article class="message is-large is-success">
                <div class="message-header">
                    <p>Thank you!</p>
                </div>
                <div class="message-body">
                    No email was actually sent but this entire operation was handled server-side and degrades without JavaScript enabled.
                </div>
            </article>
        } else {
            <form id="contact" method="post" hx-post={ page.ToURL("contact.post") }>
                <div class="field">
                    <label for="email" class="label">Email address</label>
                    <div class="control">
                        <input id="email" name="email" type="email" class={ "input", form.Submission.GetFieldStatusClass("Email") } value={ form.Email }/>
                    </div>
                    @components.FormFieldErrors(form.Submission.GetFieldErrors("Email"))
                </div>

                <div class="field">
                    <label for="message" class="label">Message</label>
                    <div class="control">
                        <textarea id="message" name="message" class={ "textarea", form.Submission.GetFieldStatusClass("Message") }>{ form.Message }</textarea>
                    </div>
                    @components.FormFieldErrors(form.Submission.GetFieldErrors("Message"))
                </div>

                <div class="field is-grouped">
                    <div class="control">
                        <button class="button is-link">Submit</button>
                    </div>
                </div>

                @components.FormCSRF(page.CSRF)
            </form>
        }
    }
}
