package components

import (
	"fmt"
	"strings"

	"github.com/mikestefanello/pagoda/pkg/controller"
	"github.com/mikestefanello/pagoda/templates/helpers"
)

templ Metatags(page *controller.Page) {
	<title>
		{ page.AppName }
		if len(page.Title) > 0 {
			{ fmt.Sprintf("| %s", page.Title) }
		}
	</title>
	<link rel="icon" href={ helpers.File("favicon.png") }/>
	<meta charset="utf-8"/>
	<meta name="viewport" content="width=device-width, initial-scale=1"/>
	<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
	if len(page.Metatags.Description) > 0 {
		<meta name="description" content="{page.Metatags.Description}"/>
	}
	if len(page.Metatags.Keywords) > 0 {
		<meta name="keywords" content={ strings.Join(page.Metatags.Keywords, ", ") }/>
	}
}

templ CSS() {
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css"/>
	<link src="files/svelte_bundle.css"/>
	<link src="files/styles_bundle.css"/>
}

templ JS() {
	<script src="https://unpkg.com/htmx.org@1.9.3"></script>
	<script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
	<script src="files/vanilla_bundle.js"></script>
	<script src="files/svelte_bundle.js"></script>
}

script csrfJS(token string) {
    document.body.addEventListener('htmx:configRequest', function(evt)  {
        if (evt.detail.verb !== "get") {
            evt.detail.parameters['csrf'] = token;
        }
    })
}

script htmxBeforeSwap() {
    document.body.addEventListener('htmx:beforeSwap', function(evt) {
        if (evt.detail.xhr.status >= 400){
            evt.detail.shouldSwap = true;
            evt.detail.target = htmx.find("body");
        }
    });
}

templ Footer(page *controller.Page) {
	if len(page.CSRF) > 0 {
		@csrfJS(page.CSRF)
	}
	@htmxBeforeSwap()
}
