package components

import (
	"github.com/mikestefanello/pagoda/pkg/controller"
)

templ Drawer(page *controller.Page) {
	<div
		x-data="{ 
			isOpen: window.innerWidth >= 1024,
			conditionalToggle() {
				if (window.innerWidth < 1024) {
					this.isOpen = false;
				}
			}
		}"
		@keydown.escape.window="isOpen = false"
		x-cloak
		@resize.window="isOpen = window.innerWidth >= 1024"
		class="w-full"
	>
		@drawerButtonToggle()
		@drawerPanel(page)
		@overlay()
	</div>
}

templ drawerButtonToggle() {
	<div
		id="hamburger-btn"
		class="fixed top-0 left-0 z-40 p-4 lg:hidden"
		style="border-radius: 50%;"
		@click="isOpen = true"
	>
		<button
			class="text-white hover:text-blue-700 focus:outline-none"
			type="button"
			aria-controls="drawer"
			style="background: radial-gradient(circle, rgba(0, 0, 0, 0.75) 20%, transparent 70%); 
			padding: 5px; border-radius: 50%; display: flex; justify-content: center; align-items: center;"
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke="currentColor"
				class="w-7 h-7 md:w-10 md:h-10"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="3"
					d="M4 6h16M4 12h16m-16 6h16"
				></path>
			</svg>
			<div
				id="hamburger-notification-count"
				class="absolute inline-flex items-center justify-center px-2 ms-3 
				text-sm font-medium rounded-full bg-red-800 text-white top-3 -end-0.5 hidden"
			>0</div>
		</button>
	</div>
}

templ drawerPanel(page *controller.Page) {
	<div
		id="drawer"
		class="fixed top-0 lg:top-auto left-0 lg:left-auto z-50 h-screen p-4 overflow-y-auto 
    	-translate-x-full lg:translate-x-0 transform transition duration-150 
		bg-primary text-primary-content w-64"
		:class="{'-translate-x-full opacity-0':isOpen === false, 'translate-x-0 opacity-100': isOpen === true}"
		aria-labelledby="drawer-label"
		if page.IsAuth {
			hx-ext="sse"
			sse-connect={ page.ToURL("realtime") }
		}
		hx-target="#main-content"
		hx-select="#main-content"
		hx-swap="outerHTML"
		hx-push-url="true"
	>
		@drawerTop(page)
		<div class="py-4 overflow-y-auto">
			<ul class="space-y-2 font-medium cursor-pointer">
				<li>
					<a
						hx-get={ page.ToURL("home") }
						@click="conditionalToggle()"
						class="flex items-center p-2 rounded-lg hover-brightness"
						id="meet"
					>
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
							<path fill-rule="evenodd" d="M13.5 4.938a7 7 0 1 1-9.006 1.737c.202-.257.59-.218.793.039.278.352.594.672.943.954.332.269.786-.049.773-.476a5.977 5.977 0 0 1 .572-2.759 6.026 6.026 0 0 1 2.486-2.665c.247-.14.55-.016.677.238A6.967 6.967 0 0 0 13.5 4.938ZM14 12a4 4 0 0 1-4 4c-1.913 0-3.52-1.398-3.91-3.182-.093-.429.44-.643.814-.413a4.043 4.043 0 0 0 1.601.564c.303.038.531-.24.51-.544a5.975 5.975 0 0 1 1.315-4.192.447.447 0 0 1 .431-.16A4.001 4.001 0 0 1 14 12Z" clip-rule="evenodd"></path>
						</svg>
						<span class="ms-3">Home</span>
					</a>
				</li>
				<li>
					<button type="button" class="flex items-center w-full p-2 text-base transition duration-75 rounded-lg hover-brightness group" aria-controls="dropdown-example" data-collapse-toggle="dropdown-example">
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5">
							<path fill-rule="evenodd" d="M12 5.25c1.213 0 2.415.046 3.605.135a3.256 3.256 0 0 1 3.01 3.01c.044.583.077 1.17.1 1.759L17.03 8.47a.75.75 0 1 0-1.06 1.06l3 3a.75.75 0 0 0 1.06 0l3-3a.75.75 0 0 0-1.06-1.06l-1.752 1.751c-.023-.65-.06-1.296-.108-1.939a4.756 4.756 0 0 0-4.392-4.392 49.422 49.422 0 0 0-7.436 0A4.756 4.756 0 0 0 3.89 8.282c-.017.224-.033.447-.046.672a.75.75 0 1 0 1.497.092c.013-.217.028-.434.044-.651a3.256 3.256 0 0 1 3.01-3.01c1.19-.09 2.392-.135 3.605-.135Zm-6.97 6.22a.75.75 0 0 0-1.06 0l-3 3a.75.75 0 1 0 1.06 1.06l1.752-1.751c.023.65.06 1.296.108 1.939a4.756 4.756 0 0 0 4.392 4.392 49.413 49.413 0 0 0 7.436 0 4.756 4.756 0 0 0 4.392-4.392c.017-.223.032-.447.046-.672a.75.75 0 0 0-1.497-.092c-.013.217-.028.434-.044.651a3.256 3.256 0 0 1-3.01 3.01 47.953 47.953 0 0 1-7.21 0 3.256 3.256 0 0 1-3.01-3.01 47.759 47.759 0 0 1-.1-1.759L6.97 15.53a.75.75 0 0 0 1.06-1.06l-3-3Z" clip-rule="evenodd"></path>
						</svg>
						<span class="flex-1 ms-3 text-left rtl:text-right whitespace-nowrap">Services</span>
						<svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
							<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"></path>
						</svg>
					</button>
					<ul id="dropdown-example" class="hidden py-2 space-y-2">
						<li>
							<a
								href="#"
								class="flex items-center w-full p-2 rounded-lg pl-11 hover-brightness"
							>Web Development</a>
						</li>
						<li>
							<a
								href="#"
								class="flex items-center w-full p-2 rounded-lg pl-11 hover-brightness"
							>SEO Services</a>
						</li>
						<li>
							<a
								href="#"
								class="flex items-center w-full p-2 rounded-lg pl-11 hover-brightness"
							>Digital Marketing</a>
						</li>
					</ul>
				</li>
				<li>
					<a
						hx-get={ page.ToURL("about") }
						@click="conditionalToggle()"
						class="flex items-center p-2 rounded-lg hover-brightness"
						id="meet"
					>
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
							<path fill-rule="evenodd" d="M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0Zm-7-4a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM9 9a.75.75 0 0 0 0 1.5h.253a.25.25 0 0 1 .244.304l-.459 2.066A1.75 1.75 0 0 0 10.747 15H11a.75.75 0 0 0 0-1.5h-.253a.25.25 0 0 1-.244-.304l.459-2.066A1.75 1.75 0 0 0 9.253 9H9Z" clip-rule="evenodd"></path>
						</svg>
						<span class="ms-3">About</span>
					</a>
				</li>
				<li>
					<a
						hx-get={ page.ToURL("contact") }
						@click="conditionalToggle()"
						class="flex items-center p-2 rounded-lg hover-brightness"
						id="meet"
					>
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
							<path fill-rule="evenodd" d="M13.5 4.938a7 7 0 1 1-9.006 1.737c.202-.257.59-.218.793.039.278.352.594.672.943.954.332.269.786-.049.773-.476a5.977 5.977 0 0 1 .572-2.759 6.026 6.026 0 0 1 2.486-2.665c.247-.14.55-.016.677.238A6.967 6.967 0 0 0 13.5 4.938ZM14 12a4 4 0 0 1-4 4c-1.913 0-3.52-1.398-3.91-3.182-.093-.429.44-.643.814-.413a4.043 4.043 0 0 0 1.601.564c.303.038.531-.24.51-.544a5.975 5.975 0 0 1 1.315-4.192.447.447 0 0 1 .431-.16A4.001 4.001 0 0 1 14 12Z" clip-rule="evenodd"></path>
						</svg>
						<span class="ms-3">Contact</span>
					</a>
				</li>
				if page.IsAuth {
					<li>
						<a
							hx-get={ page.ToURL("logout") }
							@click="conditionalToggle()"
							class="flex items-center p-2 rounded-lg hover-brightness"
							id="meet"
						>
							<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
								<path fill-rule="evenodd" d="M3 4.25A2.25 2.25 0 0 1 5.25 2h5.5A2.25 2.25 0 0 1 13 4.25v2a.75.75 0 0 1-1.5 0v-2a.75.75 0 0 0-.75-.75h-5.5a.75.75 0 0 0-.75.75v11.5c0 .414.336.75.75.75h5.5a.75.75 0 0 0 .75-.75v-2a.75.75 0 0 1 1.5 0v2A2.25 2.25 0 0 1 10.75 18h-5.5A2.25 2.25 0 0 1 3 15.75V4.25Z" clip-rule="evenodd"></path>
								<path fill-rule="evenodd" d="M6 10a.75.75 0 0 1 .75-.75h9.546l-1.048-.943a.75.75 0 1 1 1.004-1.114l2.5 2.25a.75.75 0 0 1 0 1.114l-2.5 2.25a.75.75 0 1 1-1.004-1.114l1.048-.943H6.75A.75.75 0 0 1 6 10Z" clip-rule="evenodd"></path>
							</svg>
							<span class="ms-3">Logout</span>
						</a>
					</li>
				} else {
					<li>
						<a
							hx-get={ page.ToURL("login") }
							@click="conditionalToggle()"
							class="flex items-center p-2 rounded-lg hover-brightness"
							id="meet"
						>
							<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
								<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 9V5.25A2.25 2.25 0 0 1 10.5 3h6a2.25 2.25 0 0 1 2.25 2.25v13.5A2.25 2.25 0 0 1 16.5 21h-6a2.25 2.25 0 0 1-2.25-2.25V15M12 9l3 3m0 0-3 3m3-3H2.25"></path>
							</svg>
							<span class="ms-3">Login</span>
						</a>
					</li>
				}
			</ul>
			<div class="flex items-center justify-center mt-3">
				@ThemeToggle()
			</div>
		</div>
	</div>
}

templ drawerTop(page *controller.Page) {
	<a
		if page.IsAuth {
			hx-swap="outerHTML"
			href={ templ.URL(page.ToURL("home")) }
		} else {
			href={ templ.URL(page.ToURL("home")) }
		}
		@click="conditionalToggle()"
		class="text-xl md:text-2xl font-semibold"
	>
		<div class="flex items-center">
			<img
				loading="lazy"
				src="/files/favicon.png"
				class="h-8 sm:h-10 md:h-12 m-3"
				alt="Icon"
			/>
		</div>
	</a>
	<button
		type="button"
		aria-controls="drawer"
		class="hover-brightness bg-transparent rounded-lg text-sm 
        w-8 h-8 absolute top-2.5 end-2.5 inline-flex items-center justify-center lg:hidden
        transition duration-200"
		@click="conditionalToggle()"
	>
		<svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
			<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
		</svg>
		<span class="sr-only">Close menu</span>
	</button>
}

templ overlay() {
	<div
		class="fixed inset-0 z-40 bg-black bg-opacity-50 transition-opacity lg:hidden"
		:class="{ 'opacity-0 pointer-events-none': !isOpen, 'opacity-100': isOpen }"
		@click="conditionalToggle()"
	></div>
}
